{"ast":null,"code":"var _jsxFileName = \"/home/user1/workspace/hpp_v2/hpf_v2/client/src/components/subscribe/SubscribeRead.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport $ from 'jquery';\nimport Swal from 'sweetalert2';\nimport cookie from 'react-cookies';\nimport Modal from 'react-modal';\n// import moment from 'moment';\n// import 'moment/locale/ko';\n\nconst SubscribeLRead = props => {\n  const {\n    sno\n  } = useParams();\n  const [memNickName] = useState(cookie.load('memNickName'));\n  const [uuid, setUuid] = useState(''); // 로그인한 사용자의 uuid \n  const [mno, setMno] = useState(''); // 로그인한 사용자의 mno\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [writer, setWriter] = useState('');\n  const [viewCnt, setViewCnt] = useState('');\n  const [regidate, setRegidate] = useState('');\n  const [imageDTOList, setImageDTOList] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [append_ReplyList, setAppend_ReplyList] = useState([]);\n  const [responseReplyList, setResponseReplyList] = useState([]);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [editedContent, setEditedContent] = useState('');\n  const [selectRno, setSelectRno] = useState('');\n  const [uuidMap, setUuidMap] = useState({}); // mno와 uuid 매핑을 저장\n\n  // 1. token에서 로그인한 사용자의 id 읽어오기\n  useEffect(() => {\n    const token = cookie.load('token'); // 쿠키에서 토큰 가져오기\n    callReplyListApi(sno);\n    if (token) {\n      // 토큰을 서버에 보내서 로그인한 사용자의 uuid를 받아옴\n      axios.post('/api/member/loginCookie', {\n        token\n      }).then(response => {\n        const userUuid = response.data.uuid; // 서버로부터 받아온 로그인한 사용자의 uuid\n        setUuid(userUuid);\n        // 회원 번호(mno)를 가져오기 위해 추가 요청\n        axios.post('/api/member/readMno', {\n          uuid: userUuid\n        }).then(response => {\n          setMno(response.data.mno); // 회원 번호 상태 업데이트\n          callNboardInfoApi(userUuid); // 받아온 UUID를 기반으로 게시글 정보 요청\n        }).catch(error => {\n          console.error('회원 번호를 가져오는 중 오류 발생:', error);\n        });\n      }).catch(error => {\n        console.error('토큰에서 아이디를 읽어올 수 없습니다:', error);\n      });\n    }\n  }, [sno]);\n  useEffect(() => {\n    console.log(\"uuidMap이 업데이트되었습니다:\", uuidMap);\n    setAppend_ReplyList(ReplyListAppend(responseReplyList));\n  }, [uuidMap]); // uuidMap이 변경될 때마다 댓글 목록을 다시 렌더링\n\n  // 아이디 마스킹 함수\n  // 전달받은 값을 매개변수로 쓴다! / userUuid로 할당됨!\n  const maskUserId = userUuid => {\n    if (!userUuid || userUuid.length <= 3) {\n      // 아이디가 3자리 이하일 경우 전체를 *\n      return '*'.repeat(userUuid.length);\n    }\n    const visiblePart = userUuid.slice(0, 3); // 앞 3자리\n    const maskedPart = '*'.repeat(userUuid.length - 3); // 나머지 부분 *\n    return visiblePart + maskedPart;\n  };\n\n  // 2. 댓글 목록에서 mno로 uuid 가져오기\n  useEffect(() => {\n    if (!responseReplyList || responseReplyList.length === 0) {\n      console.log('댓글 데이터가 없습니다.');\n      return;\n    }\n    console.log(\"responseReplyList 변경됨!!!! 2:\", responseReplyList);\n    const fetchUuids = async () => {\n      if (responseReplyList && responseReplyList.length > 0) {\n        console.log(\"fetchUuids 호출됨, responseReplyList:\", responseReplyList);\n        const requests = responseReplyList.map(data => axios.post('/api/member/getUuidByMno', {\n          mno: data.mno\n        }));\n        try {\n          const responses = await Promise.all(requests);\n          console.log(\"응답 확인\", responses); // 응답 확인용 콘솔 로그\n\n          const uuidMapping = responseReplyList.reduce((acc, data, index) => {\n            console.log(\"응답에서 받은 uuid:\", responses[index].data.uuid);\n            acc[data.mno] = responses[index].data.uuid; // mno에 해당하는 uuid 매핑\n            return acc;\n          }, {});\n          console.log(\"매핑된 uuidMap: \", uuidMapping); // uuidMap 확인\n          setUuidMap(uuidMapping); // 상태 업데이트\n        } catch (error) {\n          console.error('UUID 조회 중 오류 발생:', error);\n        }\n      }\n    };\n    fetchUuids(); // 비동기 작업 호출\n  }, [responseReplyList]); // responseReplyList가 변경될 때마다 실행\n\n  // 2. 게시글 정보 API 호출, 게시글 작성자 UUID와 로그인한 사용자의 UUID를 비교\n  const callNboardInfoApi = async () => {\n    axios.get(`/api/subscribe/subscribeRead/${sno}`, {\n      //sno: sno,\n    }).then(response => {\n      try {\n        setTitle(response.data.title);\n        setContent(response.data.contents);\n        setWriter(response.data.uuid);\n        setViewCnt(response.data.counts);\n        setRegidate(response.data.wdate);\n        setImageDTOList(response.data.imageDTOList);\n      } catch (error) {\n        alert('게시글데이터 받기 오류');\n      }\n    }).catch(error => {\n      alert('게시글데이터 받기 오류2');\n      return false;\n    });\n  };\n\n  // 3. 게시글 작성자와 로그인한 사용자의 UUID가 일치하면 수정/삭제 버튼을 보여줌\n  const renderModifyDeleteButtons = () => {\n    if (uuid === writer || uuid === 'admin') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"modifyButton\",\n        className: \"btn_confirm mt20\",\n        style: {\n          marginBottom: '44px',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/SubscribeUpdate/${sno}`,\n        className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:\",\n        className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n        onClick: deleteArticle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\"));\n    }\n    return null; // 작성자가 아니면 수정/삭제 버튼을 숨김\n  };\n\n  // 4. 댓글 작성자와 로그인한 사용자의 UUID가 일치하면 수정/삭제 버튼을 보여줌\n  const renderReplyModifyDeleteButtons = data => {\n    // data.replyer를 uuidMap에서 찾아서 현재 로그인한 uuid와 비교\n    if (uuidMap[data.mno] && uuidMap[data.mno] === uuid) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"catbtn bt_ty2 submit_ty1 saveclass\",\n        onClick: () => modifyComment(`${data.rno}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"catbtn bt_ty2 submit_ty1 saveclass\",\n        onClick: () => deleteComment(`${data.rno}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\"));\n    }\n    return null; // 작성자가 아니면 수정/삭제 버튼을 숨김\n  };\n  const handleThumbnailClick = thumbnailURL => {\n    setModalIsOpen(true);\n    setSelectedImage(thumbnailURL);\n  };\n  const closeImageModal = () => {\n    setModalIsOpen(false);\n    setSelectedImage('');\n  };\n  const renderImages = () => {\n    const imageList = imageDTOList;\n    return imageList.map((images, index) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"hidden_type\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/api/supload/display?fileName=${images.imgName}`,\n      alt: `썸네일 ${index}`,\n      onClick: () => handleThumbnailClick(images.imageURL),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    })));\n  };\n  const deleteArticle = e => {\n    sweetalertDelete1('삭제하시겠습니까?', () => {\n      axios.delete(`/api/subscribe/subscribeDelete/${sno}`, {\n        // sno: sno\n      }).then(response => {}).catch(error => {\n        alert('작업중 오류가 발생하였습니다.');\n        return false;\n      });\n    });\n  };\n  const sweetalertDelete1 = (title, callbackFunc) => {\n    Swal.fire({\n      title: title,\n      text: \"\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes'\n    }).then(result => {\n      if (result.value) {\n        Swal.fire('삭제되었습니다.', '', 'success').then(() => {\n          window.location.href = '/SubscribeList';\n        });\n      } else {\n        return false;\n      }\n      callbackFunc();\n    });\n  };\n  const submitClick = e => {\n    const reply_checker = $('#replyTextVal').val();\n    const fnValidate = e => {\n      if (reply_checker === '') {\n        $('#replyTextVal').addClass('border_validate_err');\n        sweetalert('댓글내용을 입력해주세요.', '', 'error', '닫기');\n        return false;\n      }\n      $('#replyTextVal').removeClass('border_validate_err');\n      return true;\n    };\n    if (fnValidate()) {\n      // 폼 데이터를 객체로 수집\n      const Json_data = {\n        sno: $('#snoVal').val(),\n        replyer: $('#replyerVal').val(),\n        mno: mno,\n        // mno 값을 별도로 수집한 경우\n        rcomment: $('#replyTextVal').val()\n      };\n      axios.post('/api/sreplies/add', Json_data).then(response => {\n        try {\n          if (response.data == \"SUCCESS\") {\n            callReplyListApi(sno);\n            $('#replyTextVal').val('');\n          }\n        } catch (error) {\n          alert('1. 작업중 오류가 발생하였습니다.');\n        }\n      }).catch(error => {\n        alert('2. 작업중 오류가 발생하였습니다.');\n        return false;\n      });\n    }\n  };\n  const sweetalert = (title, contents, icon, confirmButtonText) => {\n    Swal.fire({\n      title: title,\n      text: contents,\n      icon: icon,\n      confirmButtonText: confirmButtonText\n    });\n  };\n  const callReplyListApi = sno => {\n    axios.get(`/api/sreplies/list/${sno}`).then(response => {\n      try {\n        setResponseReplyList(response.data);\n        setAppend_ReplyList(ReplyListAppend(response.data));\n      } catch (error) {\n        alert('작업중 오류가 발생하였습니다1.');\n      }\n    }).catch(error => {\n      alert('작업중 오류가 발생하였습니다2.');\n      return false;\n    });\n  };\n  const ReplyListAppend = replyList => {\n    if (!replyList || replyList.length === 0) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 20\n        }\n      }, \"\\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\");\n    }\n    let result = [];\n    for (let i = 0; i < replyList.length; i++) {\n      let data = replyList[i];\n      const isCurrentUserCommentOwner = true;\n      const maskedUuid = uuidMap[data.mno] ? maskUserId(uuidMap[data.mno]) : '아이디 누락'; // 마스킹된 UUID\n\n      console.log(\"댓글에서 보여줄 내용:\", data); // 댓글 목록 확인\n\n      console.log(\"uuidMap 확인:\", uuidMap);\n      console.log(\"현재 mno 확인:\", data.mno);\n      result.push(/*#__PURE__*/React.createElement(\"li\", {\n        key: data.rno,\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          fontSize: '19px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '80px',\n          height: '80px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(`../../img/댓글2.gif`),\n        alt: \"\\uB313\\uAE00 \\uC774\\uBBF8\\uC9C0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: '19px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 29\n        }\n      }, data.name, \" (maskedUuid)\", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginLeft: '5px',\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: '10px',\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: '#525252'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 29\n        }\n      }, data.rcomment))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }\n      }, renderReplyModifyDeleteButtons(data))));\n    }\n    return result;\n  };\n  const deleteComment = rno => {\n    sweetalertDelete2('삭제하시겠습니까?', () => {\n      axios.delete(`/api/sreplies/delete/${rno}`, {}).then(response => {\n        if (response.data == \"SUCCESS\") {\n          callReplyListApi(sno);\n        }\n      }).catch(error => {\n        alert('작업중 오류가 발생하였습니다.');\n        return false;\n      });\n    });\n  };\n  const sweetalertDelete2 = (title, callbackFunc) => {\n    Swal.fire({\n      title: title,\n      text: \"\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes'\n    }).then(result => {\n      if (result.value) {\n        callbackFunc();\n        //callReplyListApi(sno);\n      } else {\n        return false;\n      }\n    });\n  };\n  const modifyComment = (rno, rco) => {\n    setIsEditModalOpen(true);\n    setSelectRno(rno);\n    setEditedContent(rco);\n  };\n  const openEditModal = rno => {\n    this.setState({\n      selectRno: rno,\n      isEditModalOpen: true,\n      editedContent: rno\n    });\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n    setEditedContent('');\n  };\n  const handleEditSubmit = () => {\n    axios.put(`/api/sreplies/update/${selectRno}`, {\n      rno: selectRno,\n      rcomment: editedContent\n    }).then(response => {\n      if (response.data == \"SUCCESS\") {\n        setIsEditModalOpen(false);\n        callReplyListApi(sno);\n      }\n    }).catch(error => {\n      alert('댓글수정오류');\n      return false;\n    });\n  };\n  const formattedRegidate = new Date(regidate).toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  }).split('.').join('/').replace(/\\s/g, '');\n  const trimmedRegidate = formattedRegidate.slice(0, -1);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    class: \"sub_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    class: \"s_cnt mp_pro_li ct1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"li_top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    class: \"s_tit1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, \"\\uC804\\uBB38\\uAC00\\uAD6C\\uB3C5\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bo_w re1_wrap re1_wrap_writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"frm\",\n    id: \"frm\",\n    action: \"\",\n    onsubmit: \"\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    class: \"res_w\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tb_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"Right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/SubscribeList`,\n    className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 37\n    }\n  }, \"\\uBAA9\\uB85D\")), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table_ty1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 45\n    }\n  }, \"\\uC81C\\uBAA9\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    id: \"titleVal\",\n    readOnly: \"readonly\",\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table_ty1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 45\n    }\n  }, \"\\uC791\\uC131\\uC790\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"writer\",\n    id: \"writerVal\",\n    readOnly: \"readonly\",\n    value: writer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"regDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 45\n    }\n  }, \"\\uC791\\uC131\\uC77C\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"regiDate\",\n    id: \"regiDateVal\",\n    readOnly: \"readonly\",\n    value: trimmedRegidate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 45\n    }\n  }, \"\\uC870\\uD68C\\uC218\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"viewCnt\",\n    id: \"viewCntVal\",\n    readOnly: \"readonly\",\n    value: viewCnt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table_ty1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 45\n    }\n  }, \"\\uB0B4\\uC6A9\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    style: {\n      padding: '15px'\n    },\n    name: \"content\",\n    id: \"contentVal\",\n    rows: \"\",\n    cols: \"\",\n    readOnly: \"readonly\",\n    value: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 41\n    }\n  }, \"\\uD30C\\uC77C\\uBAA9\\uB85D\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fileBox fileBox1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"upload_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 45\n    }\n  }, renderImages()))), /*#__PURE__*/React.createElement(Modal, {\n    ariaHideApp: false,\n    isOpen: modalIsOpen,\n    onRequestClose: closeImageModal,\n    contentLabel: \"\\uC378\\uB124\\uC77C \\uC774\\uBBF8\\uC9C0\",\n    style: {\n      overlay: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n      },\n      content: {\n        width: '75%',\n        height: '75%',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        overflow: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 37\n    }\n  }, selectedImage && /*#__PURE__*/React.createElement(\"img\", {\n    src: `/api/supload/display?fileName=${selectedImage}`,\n    alt: \"\\uC120\\uD0DD\\uD55C \\uC378\\uB124\\uC77C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 45\n    }\n  }))), renderModifyDeleteButtons()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table_ty99\",\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 21\n    }\n  }, \"\\uB313\\uAE00\"), /*#__PURE__*/React.createElement(\"form\", {\n    name: \"frm2\",\n    id: \"frm2\",\n    action: \"\",\n    onsubmit: \"\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table_ty1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    id: \"snoDiv\",\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"sno\",\n    id: \"snoVal\",\n    value: sno,\n    readonly: \"readonly\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    id: \"replyerDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"mno\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uBC88\\uD638\")), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      flex: '1',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"mno\",\n    id: \"mno\",\n    readOnly: \"readonly\",\n    value: mno,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"replyer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 41\n    }\n  }, \"\\uC791\\uC131\\uC790\")), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      flex: '1',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"replyer\",\n    id: \"replyerVal\",\n    readOnly: \"readonly\",\n    value: uuid,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"rcomment\",\n    style: {\n      marginRight: '135px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 37\n    }\n  }, \"\\uB313\\uAE00\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"rcomment\",\n    id: \"replyTextVal\",\n    placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    style: {\n      flex: '1',\n      marginRight: '8px',\n      height: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"javascript:\",\n    className: \"bt_ty1 bt_ty3 submit_ty1 saveclass\",\n    onClick: e => submitClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 37\n    }\n  }, \"\\uB4F1\\uB85D\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"replyarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 25\n    }\n  }, append_ReplyList))), /*#__PURE__*/React.createElement(Modal, {\n    ariaHideApp: false,\n    isOpen: isEditModalOpen,\n    onRequestClose: closeEditModal,\n    style: {\n      overlay: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n      },\n      content: {\n        width: '30%',\n        height: '30%',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        overflow: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"replyDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 25\n    }\n  }, \"\\uB313\\uAE00 \\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input_2\",\n    style: {\n      height: '30%',\n      width: '80%',\n      padding: '15px',\n      marginBottom: '20px'\n    },\n    value: editedContent,\n    onChange: e => setEditedContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n    onClick: handleEditSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 29\n    }\n  }, \"\\uC800\\uC7A5\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 29\n    }\n  }, \"\\uCDE8\\uC18C\"))))));\n};\nexport default SubscribeLRead;","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","axios","$","Swal","cookie","Modal","SubscribeLRead","props","sno","memNickName","load","uuid","setUuid","mno","setMno","title","setTitle","content","setContent","writer","setWriter","viewCnt","setViewCnt","regidate","setRegidate","imageDTOList","setImageDTOList","modalIsOpen","setModalIsOpen","selectedImage","setSelectedImage","append_ReplyList","setAppend_ReplyList","responseReplyList","setResponseReplyList","isEditModalOpen","setIsEditModalOpen","editedContent","setEditedContent","selectRno","setSelectRno","uuidMap","setUuidMap","token","callReplyListApi","post","then","response","userUuid","data","callNboardInfoApi","catch","error","console","log","ReplyListAppend","maskUserId","length","repeat","visiblePart","slice","maskedPart","fetchUuids","requests","map","responses","Promise","all","uuidMapping","reduce","acc","index","get","contents","counts","wdate","alert","renderModifyDeleteButtons","createElement","id","className","style","marginBottom","textAlign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","href","onClick","deleteArticle","renderReplyModifyDeleteButtons","modifyComment","rno","deleteComment","handleThumbnailClick","thumbnailURL","closeImageModal","renderImages","imageList","images","key","src","imgName","alt","imageURL","e","sweetalertDelete1","delete","callbackFunc","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","value","window","location","submitClick","reply_checker","val","fnValidate","addClass","sweetalert","removeClass","Json_data","replyer","rcomment","replyList","i","isCurrentUserCommentOwner","maskedUuid","push","display","justifyContent","alignItems","fontSize","width","height","require","name","marginLeft","color","sweetalertDelete2","rco","openEditModal","setState","closeEditModal","handleEditSubmit","put","formattedRegidate","Date","toLocaleDateString","year","month","day","split","join","replace","trimmedRegidate","class","action","onsubmit","method","for","type","readOnly","padding","rows","cols","ariaHideApp","isOpen","onRequestClose","contentLabel","overlay","backgroundColor","top","left","transform","border","borderRadius","overflow","flexDirection","marginTop","readonly","marginRight","flex","placeholder","onChange","target"],"sources":["/home/user1/workspace/hpp_v2/hpf_v2/client/src/components/subscribe/SubscribeRead.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport $ from 'jquery';\nimport Swal from 'sweetalert2'\nimport cookie from 'react-cookies';\nimport Modal from 'react-modal';\n// import moment from 'moment';\n// import 'moment/locale/ko';\n\nconst SubscribeLRead = (props) => {\n    const { sno } = useParams();\n\n    const [memNickName] = useState(cookie.load('memNickName'));\n    const [uuid, setUuid] = useState(''); // 로그인한 사용자의 uuid \n    const [mno, setMno] = useState(''); // 로그인한 사용자의 mno\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [writer, setWriter] = useState('');\n    const [viewCnt, setViewCnt] = useState('');\n    const [regidate, setRegidate] = useState('');\n    const [imageDTOList, setImageDTOList] = useState([]);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [selectedImage, setSelectedImage] = useState('');\n    const [append_ReplyList, setAppend_ReplyList] = useState([]);\n    const [responseReplyList, setResponseReplyList] = useState([]);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [editedContent, setEditedContent] = useState('');\n    const [selectRno, setSelectRno] = useState('');\n\n    const [uuidMap, setUuidMap] = useState({}); // mno와 uuid 매핑을 저장\n\n\n    // 1. token에서 로그인한 사용자의 id 읽어오기\n    useEffect(() => {\n        const token = cookie.load('token'); // 쿠키에서 토큰 가져오기\n        callReplyListApi(sno);\n\n        if (token) {\n            // 토큰을 서버에 보내서 로그인한 사용자의 uuid를 받아옴\n            axios.post('/api/member/loginCookie', { token })\n                .then(response => {\n                    const userUuid = response.data.uuid; // 서버로부터 받아온 로그인한 사용자의 uuid\n                    setUuid(userUuid);\n                    // 회원 번호(mno)를 가져오기 위해 추가 요청\n                    axios.post('/api/member/readMno', { uuid: userUuid })\n                        .then(response => {\n                            setMno(response.data.mno); // 회원 번호 상태 업데이트\n                            callNboardInfoApi(userUuid); // 받아온 UUID를 기반으로 게시글 정보 요청\n                        })\n                        .catch(error => {\n                            console.error('회원 번호를 가져오는 중 오류 발생:', error);\n                        });\n                })\n                .catch(error => {\n                    console.error('토큰에서 아이디를 읽어올 수 없습니다:', error);\n                });\n        }\n    }, [sno]);\n\n    useEffect(() => {\n        console.log(\"uuidMap이 업데이트되었습니다:\", uuidMap);\n        setAppend_ReplyList(ReplyListAppend(responseReplyList));\n    }, [uuidMap]);  // uuidMap이 변경될 때마다 댓글 목록을 다시 렌더링\n\n\n    // 아이디 마스킹 함수\n    // 전달받은 값을 매개변수로 쓴다! / userUuid로 할당됨!\n    const maskUserId = (userUuid) => {\n        if (!userUuid || userUuid.length <= 3) {\n            // 아이디가 3자리 이하일 경우 전체를 *\n            return '*'.repeat(userUuid.length);\n        }\n        const visiblePart = userUuid.slice(0, 3); // 앞 3자리\n        const maskedPart = '*'.repeat(userUuid.length - 3); // 나머지 부분 *\n        return visiblePart + maskedPart;\n    };\n\n    // 2. 댓글 목록에서 mno로 uuid 가져오기\n    useEffect(() => {\n\n        if (!responseReplyList || responseReplyList.length === 0) {\n            console.log('댓글 데이터가 없습니다.');\n            return;\n        }\n\n\n        console.log(\"responseReplyList 변경됨!!!! 2:\", responseReplyList);\n\n\n        const fetchUuids = async () => {\n            if (responseReplyList && responseReplyList.length > 0) {\n                console.log(\"fetchUuids 호출됨, responseReplyList:\", responseReplyList);\n\n                const requests = responseReplyList.map((data) =>\n                    axios.post('/api/member/getUuidByMno', { mno: data.mno })\n                );\n\n                try {\n                    const responses = await Promise.all(requests);\n                    console.log(\"응답 확인\", responses); // 응답 확인용 콘솔 로그\n\n                    const uuidMapping = responseReplyList.reduce((acc, data, index) => {\n                        console.log(\"응답에서 받은 uuid:\", responses[index].data.uuid);\n                        acc[data.mno] = responses[index].data.uuid; // mno에 해당하는 uuid 매핑\n                        return acc;\n                    }, {});\n\n                    console.log(\"매핑된 uuidMap: \", uuidMapping); // uuidMap 확인\n                    setUuidMap(uuidMapping); // 상태 업데이트\n\n                } catch (error) {\n                    console.error('UUID 조회 중 오류 발생:', error);\n                }\n            }\n        };\n\n\n        fetchUuids(); // 비동기 작업 호출\n    }, [responseReplyList]); // responseReplyList가 변경될 때마다 실행\n\n\n\n    // 2. 게시글 정보 API 호출, 게시글 작성자 UUID와 로그인한 사용자의 UUID를 비교\n    const callNboardInfoApi = async () => {\n        axios.get(`/api/subscribe/subscribeRead/${sno}`, {\n            //sno: sno,\n        }).then(response => {\n            try {\n                setTitle(response.data.title);\n                setContent(response.data.contents);\n                setWriter(response.data.uuid);\n                setViewCnt(response.data.counts);\n                setRegidate(response.data.wdate);\n                setImageDTOList(response.data.imageDTOList);\n            }\n            catch (error) {\n                alert('게시글데이터 받기 오류')\n            }\n\n        }).catch(error => { alert('게시글데이터 받기 오류2'); return false; });\n    }\n\n\n\n    // 3. 게시글 작성자와 로그인한 사용자의 UUID가 일치하면 수정/삭제 버튼을 보여줌\n    const renderModifyDeleteButtons = () => {\n        if (uuid === writer || uuid === 'admin') {\n            return (\n                <div id=\"modifyButton\" className=\"btn_confirm mt20\" style={{ marginBottom: '44px', textAlign: 'center' }}>\n                    <Link to={`/SubscribeUpdate/${sno}`} className=\"bt_ty bt_ty2 submit_ty1 saveclass\">수정</Link>\n                    <a href=\"javascript:\" className=\"bt_ty bt_ty2 submit_ty1 saveclass\" onClick={deleteArticle}>삭제</a>\n                </div>\n            );\n        }\n        return null; // 작성자가 아니면 수정/삭제 버튼을 숨김\n    };\n\n\n    // 4. 댓글 작성자와 로그인한 사용자의 UUID가 일치하면 수정/삭제 버튼을 보여줌\n    const renderReplyModifyDeleteButtons = (data) => {\n        // data.replyer를 uuidMap에서 찾아서 현재 로그인한 uuid와 비교\n        if (uuidMap[data.mno] && uuidMap[data.mno] === uuid) {\n            return (\n                <div>\n                    <button className=\"catbtn bt_ty2 submit_ty1 saveclass\" onClick={() => modifyComment(`${data.rno}`)}>수정</button>\n                    {/*  <button className=\"catbtn bt_ty2 submit_ty1 saveclass\" onClick={() => openEditModal(`${data.rno}`)}>모달</button> */}\n                    <button className=\"catbtn bt_ty2 submit_ty1 saveclass\" onClick={() => deleteComment(`${data.rno}`)}>삭제</button>\n                </div>\n            );\n        }\n        return null; // 작성자가 아니면 수정/삭제 버튼을 숨김\n    };\n\n\n    const handleThumbnailClick = (thumbnailURL) => {\n        setModalIsOpen(true);\n        setSelectedImage(thumbnailURL);\n    };\n\n    const closeImageModal = () => {\n        setModalIsOpen(false);\n        setSelectedImage('');\n    };\n\n    const renderImages = () => {\n        const imageList = imageDTOList;\n\n        return imageList.map((images, index) => (\n            <li className=\"hidden_type\" key={index}>\n                <img\n                    src={`/api/supload/display?fileName=${images.imgName}`}\n                    alt={`썸네일 ${index}`}\n                    onClick={() => handleThumbnailClick(images.imageURL)}\n                />\n            </li>\n        ));\n    };\n\n    const deleteArticle = (e) => {\n        sweetalertDelete1('삭제하시겠습니까?', () => {\n            axios.delete(`/api/subscribe/subscribeDelete/${sno}`, {\n                // sno: sno\n            }).then(response => {\n\n            }).catch(error => {\n                alert('작업중 오류가 발생하였습니다.'); return false;\n            });\n        })\n    };\n\n    const sweetalertDelete1 = (title, callbackFunc) => {\n        Swal.fire({\n            title: title,\n            text: \"\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes'\n        }).then((result) => {\n            if (result.value) {\n                Swal.fire(\n                    '삭제되었습니다.',\n                    '',\n                    'success'\n                ).then(() => {\n                    window.location.href = '/SubscribeList';\n                });\n            } else {\n                return false;\n            }\n            callbackFunc();\n        })\n    }\n\n    const submitClick = (e) => {\n        const reply_checker = $('#replyTextVal').val();\n\n        const fnValidate = (e) => {\n            if (reply_checker === '') {\n                $('#replyTextVal').addClass('border_validate_err');\n                sweetalert('댓글내용을 입력해주세요.', '', 'error', '닫기')\n                return false;\n            }\n            $('#replyTextVal').removeClass('border_validate_err');\n            return true;\n        }\n\n        if (fnValidate()) {\n\n            // 폼 데이터를 객체로 수집\n            const Json_data = {\n                sno: $('#snoVal').val(),\n                replyer: $('#replyerVal').val(),\n                mno: mno,  // mno 값을 별도로 수집한 경우\n                rcomment: $('#replyTextVal').val()\n            };\n\n            axios.post('/api/sreplies/add', Json_data)\n                .then(response => {\n                    try {\n                        if (response.data == \"SUCCESS\") {\n                            callReplyListApi(sno);\n                            $('#replyTextVal').val('')\n                        }\n                    }\n                    catch (error) {\n                        alert('1. 작업중 오류가 발생하였습니다.')\n                    }\n                }).catch(error => { alert('2. 작업중 오류가 발생하였습니다.'); return false; });\n        }\n    };\n\n    const sweetalert = (title, contents, icon, confirmButtonText) => {\n        Swal.fire({\n            title: title,\n            text: contents,\n            icon: icon,\n            confirmButtonText: confirmButtonText\n        })\n    }\n\n    const callReplyListApi = (sno) => {\n        axios.get(`/api/sreplies/list/${sno}`)\n            .then(response => {\n                try {\n                    setResponseReplyList(response.data);\n                    setAppend_ReplyList(ReplyListAppend(response.data));\n                } catch (error) {\n                    alert('작업중 오류가 발생하였습니다1.');\n                }\n            })\n            .catch(error => { alert('작업중 오류가 발생하였습니다2.'); return false; });\n    }\n\n    const ReplyListAppend = (replyList) => {\n        if (!replyList || replyList.length === 0) {\n            return <li>댓글이 없습니다.</li>;\n        }\n        let result = []\n\n        for (let i = 0; i < replyList.length; i++) {\n            let data = replyList[i]\n            const isCurrentUserCommentOwner = true;\n            const maskedUuid = uuidMap[data.mno] ? maskUserId(uuidMap[data.mno]) : '아이디 누락'; // 마스킹된 UUID\n\n            console.log(\"댓글에서 보여줄 내용:\", data); // 댓글 목록 확인\n\n            console.log(\"uuidMap 확인:\", uuidMap);\n            console.log(\"현재 mno 확인:\", data.mno);\n\n\n            result.push(\n                <li key={data.rno} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', fontSize: '19px' }}>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div style={{ width: '80px', height: '80px' }}>\n                            <img src={require(`../../img/댓글2.gif`)} alt=\"댓글 이미지\" />\n                        </div>\n                        <div className=\"cat\">\n                            <p style={{ fontSize: '19px' }}>\n                                {data.name} (maskedUuid)\n\n                                <span style={{ fontSize: '12px' }}>\n                                    <span style={{ marginLeft: '5px', color: 'grey' }}></span>\n                                    <span style={{ fontSize: '10px', color: 'grey' }}></span>\n                                </span>\n                            </p>\n                            <p style={{ color: '#525252' }}>{data.rcomment}\n                                {/* <input type=\"text\" value={data.rcomment} style={{ flex: '1', marginRight: '8px', height: '50px' }} /> */}\n                            </p>\n                        </div>\n                    </div>\n                    <div>\n                        {renderReplyModifyDeleteButtons(data)}\n                    </div>\n                </li>\n            );\n        }\n        return result\n    }\n\n    const deleteComment = (rno) => {\n        sweetalertDelete2('삭제하시겠습니까?', () => {\n            axios.delete(`/api/sreplies/delete/${rno}`, {\n            }).then(response => {\n                if (response.data == \"SUCCESS\") {\n                    callReplyListApi(sno);\n                }\n            }).catch(error => { alert('작업중 오류가 발생하였습니다.'); return false; });\n        })\n    };\n\n    const sweetalertDelete2 = (title, callbackFunc) => {\n        Swal.fire({\n            title: title,\n            text: \"\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes'\n        }).then((result) => {\n            if (result.value) {\n                callbackFunc();\n                //callReplyListApi(sno);\n            } else {\n                return false;\n            }\n        })\n    }\n\n    const modifyComment = (rno, rco) => {\n        setIsEditModalOpen(true);\n        setSelectRno(rno);\n        setEditedContent(rco);\n    };\n\n    const openEditModal = (rno) => {\n        this.setState({\n            selectRno: rno,\n            isEditModalOpen: true,\n            editedContent: rno,\n        });\n    };\n\n    const closeEditModal = () => {\n        setIsEditModalOpen(false);\n        setEditedContent('');\n    };\n\n    const handleEditSubmit = () => {\n        axios.put(`/api/sreplies/update/${selectRno}`, {\n            rno: selectRno,\n            rcomment: editedContent,\n        }).then(response => {\n            if (response.data == \"SUCCESS\") {\n                setIsEditModalOpen(false);\n                callReplyListApi(sno);\n            }\n        }).catch(error => { alert('댓글수정오류'); return false; });\n    };\n\n    const formattedRegidate = new Date(regidate).toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n    }).split('.').join('/').replace(/\\s/g, '');\n\n    const trimmedRegidate = formattedRegidate.slice(0, -1);\n\n    return (\n        <section class=\"sub_wrap\">\n            <article class=\"s_cnt mp_pro_li ct1\">\n                <div class=\"li_top\">\n                    <h2 class=\"s_tit1\">전문가구독</h2>\n                </div>\n                <div class=\"bo_w re1_wrap re1_wrap_writer\">\n                    <form name=\"frm\" id=\"frm\" action=\"\" onsubmit=\"\" method=\"post\" >\n                        <article class=\"res_w\">\n                            <div class=\"tb_outline\">\n                                <div style={{ textAlign: \"Right\" }}>\n                                    <Link to={`/SubscribeList`} className=\"bt_ty bt_ty2 submit_ty1 saveclass\">목록</Link>\n                                </div>\n                                <table class=\"table_ty1\">\n                                    <tr>\n                                        <th>\n                                            <label for=\"title\">제목</label>\n                                        </th>\n                                        <td>\n                                            <input type=\"text\" name=\"title\" id=\"titleVal\" readOnly=\"readonly\" value={title} />\n                                        </td>\n                                    </tr>\n                                </table>\n                                <table class=\"table_ty1\">\n                                    <tr>\n                                        <th>\n                                            <label for=\"writer\">작성자</label>\n                                        </th>\n                                        <td>\n                                            <input type=\"text\" name=\"writer\" id=\"writerVal\" readOnly=\"readonly\" value={writer} />\n                                        </td>\n\n                                        <th style={{ textAlign: \"center\" }}>\n                                            <label for=\"regDate\">작성일</label>\n                                        </th>\n                                        <td>\n                                            <input type=\"text\" name=\"regiDate\" id=\"regiDateVal\" readOnly=\"readonly\" value={trimmedRegidate} />\n                                        </td>\n\n                                        <th style={{ textAlign: \"center\" }}>\n                                            <label for=\"writer\">조회수</label>\n                                        </th>\n                                        <td>\n                                            <input type=\"text\" name=\"viewCnt\" id=\"viewCntVal\" readOnly=\"readonly\" value={viewCnt} />\n                                        </td>\n                                    </tr>\n                                </table>\n                                <table class=\"table_ty1\">\n                                    <tr>\n                                        <th>\n                                            <label for=\"Content\">내용</label>\n                                        </th>\n                                        <td>\n                                            <textarea style={{ padding: '15px' }} name=\"content\" id=\"contentVal\" rows=\"\" cols=\"\" readOnly=\"readonly\" value={content}></textarea>\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <th>\n                                            파일목록\n                                        </th>\n                                        <td className=\"fileBox fileBox1\">\n                                            <ul id=\"upload_img\">\n                                                {renderImages()}\n                                            </ul>\n                                        </td>\n                                    </tr>\n\n                                    <Modal\n                                        ariaHideApp={false}\n                                        isOpen={modalIsOpen}\n                                        onRequestClose={closeImageModal}\n                                        contentLabel=\"썸네일 이미지\"\n                                        style={{\n                                            overlay: {\n                                                backgroundColor: 'rgba(0, 0, 0, 0.5)'\n                                            },\n                                            content: {\n                                                width: '75%',\n                                                height: '75%',\n                                                top: '50%',\n                                                left: '50%',\n                                                transform: 'translate(-50%, -50%)',\n                                                border: '1px solid #ccc',\n                                                borderRadius: '4px',\n                                                overflow: 'auto',\n                                                display: 'flex',\n                                                flexDirection: 'column',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                backgroundColor: 'rgba(0, 0, 0, 0.5)'\n                                            }\n                                        }}>\n                                        {selectedImage && (\n                                            <img src={`/api/supload/display?fileName=${selectedImage}`} alt=\"선택한 썸네일\" />\n                                        )}\n                                    </Modal>\n                                </table>\n                                {/* 조건에 맞으면 수정/삭제 버튼 표시 */}\n                                {renderModifyDeleteButtons()}\n                            </div>\n                        </article>\n                    </form>\n\n                    <div className='table_ty99' style={{ marginTop: '50px' }}>댓글</div>\n\n                    <form name=\"frm2\" id=\"frm2\" action=\"\" onsubmit=\"\" method=\"post\">\n                        <div className='line'></div>\n                        <table class=\"table_ty1\">\n                            <tr id='snoDiv' style={{ display: 'none' }}>\n                                <td>\n                                    <input type=\"hidden\" name=\"sno\" id=\"snoVal\" value={sno} readonly=\"readonly\" />\n                                </td>\n                            </tr>\n                            <tr id='replyerDiv'>\n                                <tr style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n                                    <th style={{ marginRight: '10px' }}>\n                                        <label for=\"mno\">회원번호</label>\n                                    </th>\n                                    <td style={{ flex: '1', marginRight: '10px' }}>\n                                        <input type=\"text\" name=\"mno\" id=\"mno\" readOnly=\"readonly\" value={mno} style={{ width: '100%' }} />\n                                    </td>\n\n                                    <th style={{ marginLeft: '20px' }}>\n                                        <label for=\"replyer\">작성자</label>\n                                    </th>\n                                    <td style={{ flex: '1', marginRight: '10px' }}>\n                                        <input type=\"text\" name=\"replyer\" id=\"replyerVal\" readOnly=\"readonly\" value={uuid} style={{ width: '100%' }} />\n                                    </td>\n                                </tr>\n                            </tr>\n                            <tr>\n                                <td style={{ display: 'flex', alignItems: 'center' }}>\n                                    <label for=\"rcomment\" style={{ marginRight: '135px' }}>댓글</label>\n                                    <input type=\"text\" name=\"rcomment\" id=\"replyTextVal\" placeholder='내용을 입력해주세요.' style={{ flex: '1', marginRight: '8px', height: '50px' }} />\n                                    <a href=\"javascript:\" className=\"bt_ty1 bt_ty3 submit_ty1 saveclass\" onClick={(e) => submitClick(e)}>등록</a>\n                                </td>\n                            </tr>\n                        </table>\n                    </form>\n                    <div id='replyarea'>\n                        <ul>\n                            {append_ReplyList}\n                        </ul>\n                    </div>\n                </div>\n\n                <Modal\n                    ariaHideApp={false}\n                    isOpen={isEditModalOpen}\n                    onRequestClose={closeEditModal}\n                    style={{\n                        overlay: {\n                            backgroundColor: 'rgba(0, 0, 0, 0.5)'\n                        },\n                        content: {\n                            width: '30%',\n                            height: '30%',\n                            top: '50%',\n                            left: '50%',\n                            transform: 'translate(-50%, -50%)',\n                            border: '1px solid #ccc',\n                            borderRadius: '4px',\n                            overflow: 'auto',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: 'white'\n                        }\n                    }}>\n                    <div id=\"replyDiv\">\n                        <h2>댓글 수정</h2>\n                        <br></br>\n                        <input className=\"input_2\" style={{ height: '30%', width: '80%', padding: '15px', marginBottom: '20px' }}\n                            value={editedContent}\n                            onChange={(e) => setEditedContent(e.target.value)} ></input>\n                        <br></br>\n                        <div style={{ display: 'flex' }}>\n                            <button className=\"bt_ty bt_ty2 submit_ty1 saveclass\" onClick={handleEditSubmit}>저장</button>\n                            <button className=\"bt_ty bt_ty2 submit_ty1 saveclass\" onClick={closeEditModal}>취소</button>\n                        </div>\n                    </div>\n                </Modal>\n            </article>\n        </section>\n    );\n}\n\nexport default SubscribeLRead;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}