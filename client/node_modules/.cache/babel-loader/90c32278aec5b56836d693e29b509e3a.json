{"ast":null,"code":"var _jsxFileName = \"/home/user1/workspace/HealthPlan_All/HealthPlan_front/client/src/components/subscribe/SubscribeLRead.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport $ from 'jquery';\nimport Swal from 'sweetalert2';\nimport cookie from 'react-cookies';\nimport Modal from 'react-modal';\nconst SubscribeLRead = props => {\n  const {\n    sno\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [spoint, setSpoint] = useState('');\n  const [content, setContent] = useState('');\n  const [writer, setWriter] = useState('');\n  const [mno, setMno] = useState(''); // 글 작성자 회원번호\n  const [rmno, setRmno] = useState(''); // 로그인한 사용자의 회원번호\n  const [uuid, setUuid] = useState(cookie.load('uuid'));\n  const [viewCnt, setViewCnt] = useState('');\n  const [regidate, setRegidate] = useState('');\n  const [imageDTOList, setImageDTOList] = useState([]);\n  const [mainImage, setMainImageList] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [append_ReplyList, setAppend_ReplyList] = useState([]);\n  const [responseReplyList, setResponseReplyList] = useState([]);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [editedContent, setEditedContent] = useState('');\n  const [selectRno, setSelectRno] = useState('');\n  const [uuidMap, setUuidMap] = useState({}); // mno와 uuid 매핑을 저장\n\n  // 1. token에서 로그인한 사용자의 id 읽어오기\n  useEffect(() => {\n    const token = cookie.load('token'); // 쿠키에서 토큰 가져오기\n    callReplyListApi(sno);\n    if (token) {\n      // 토큰을 서버에 보내서 로그인한 사용자의 uuid를 받아옴\n      axios.post('/api/member/loginCookie', {\n        token\n      }).then(response => {\n        const userUuid = response.data.uuid; // 서버로부터 받아온 로그인한 사용자의 uuid\n        setUuid(userUuid);\n        // 회원 번호(mno)를 가져오기 위해 추가 요청\n        axios.post('/api/member/readMno', {\n          uuid: userUuid\n        }).then(response => {\n          setRmno(response.data.mno); // 회원 번호 상태 업데이트\n          callNboardInfoApi(userUuid); // 받아온 UUID를 기반으로 게시글 정보 요청\n          callReplyListApi(sno); // 11.06 추가 댓글 요청\n        }).catch(error => {\n          console.error('회원 번호를 가져오는 중 오류 발생:', error);\n        });\n      }).catch(error => {\n        console.error('토큰에서 아이디를 읽어올 수 없습니다:', error);\n      });\n    }\n  }, [sno]);\n  useEffect(() => {\n    console.log(\"uuidMap이 업데이트되었습니다:\", uuidMap);\n    setAppend_ReplyList(ReplyListAppend(responseReplyList));\n  }, [uuidMap, responseReplyList]); // uuidMap이 변경될 때마다 댓글 목록을 다시 렌더링\n\n  // 2. 댓글 목록에서 mno로 uuid 가져오기\n  useEffect(() => {\n    if (!responseReplyList || responseReplyList.length === 0) {\n      console.log('댓글 데이터가 없습니다.');\n      return;\n    }\n    console.log(\"responseReplyList 변경됨!!!! 2:\", responseReplyList);\n    const fetchUuids = async () => {\n      if (responseReplyList && responseReplyList.length > 0) {\n        console.log(\"fetchUuids 호출됨, responseReplyList:\", responseReplyList);\n        const requests = responseReplyList.map(data => axios.post('/api/member/getUuidByMno', {\n          mno: data.mno\n        }));\n        try {\n          const responses = await Promise.all(requests);\n          console.log(\"응답 확인\", responses); // 응답 확인용 콘솔 로그\n\n          const uuidMapping = responseReplyList.reduce((acc, data, index) => {\n            console.log(\"응답에서 받은 uuid:\", responses[index].data.uuid);\n            acc[data.mno] = responses[index].data.uuid; // mno에 해당하는 uuid 매핑\n            return acc;\n          }, {});\n          console.log(\"매핑된 uuidMap: \", uuidMapping); // uuidMap 확인\n          setUuidMap(uuidMapping); // 상태 업데이트\n        } catch (error) {\n          console.error('UUID 조회 중 오류 발생:', error);\n        }\n      }\n    };\n    fetchUuids(); // 비동기 작업 호출\n  }, [responseReplyList]); // responseReplyList가 변경될 때마다 실행\n\n  // 2. 게시글 정보 API 호출, 게시글 작성자 UUID와 로그인한 사용자의 UUID를 비교\n  const callNboardInfoApi = async () => {\n    axios.get(`/api/subscribe/subscribeLessionRead/${sno}`, {\n      //sno: sno,\n    }).then(response => {\n      try {\n        setTitle(response.data.title);\n        setSpoint(response.data.spoint);\n        setContent(response.data.contents);\n        setWriter(response.data.uuid);\n        setMno(response.data.mno);\n        setViewCnt(response.data.counts);\n        setRegidate(response.data.wdate);\n        setImageDTOList(response.data.imageDTOList);\n        setMainImageList(response.data.mainImage);\n      } catch (error) {\n        alert('게시글 데이터 받기 오류');\n      }\n    }).catch(error => {\n      alert('게시글 데이터 받기 오류2');\n      return false;\n    });\n  };\n\n  // 3. 게시글 작성자와 로그인한 사용자의 UUID가 일치하면 수정/삭제 버튼을 보여줌\n  const renderModifyDeleteButtons = () => {\n    if (uuid === writer || uuid === 'admin') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"modifyButton\",\n        className: \"btn_confirm mt20\",\n        style: {\n          marginBottom: '44px',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/SubscribeLUpdate/${sno}`,\n        className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:\",\n        className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n        onClick: deleteArticle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\"));\n    }\n    return null; // 작성자가 아니면 수정/삭제 버튼을 숨김\n  };\n\n  // 4. 댓글 작성자와 로그인한 사용자의 UUID가 일치하면 수정/삭제 버튼을 보여줌\n  const renderReplyModifyDeleteButtons = data => {\n    // data.replyer를 uuidMap에서 찾아서 현재 로그인한 uuid와 비교\n    if (uuidMap[data.mno] && uuidMap[data.mno] === uuid) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"catbtn bt_ty2 submit_ty1 saveclass\",\n        onClick: () => modifyComment(`${data.rno}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"catbtn bt_ty2 submit_ty1 saveclass\",\n        onClick: () => deleteComment(`${data.rno}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\"));\n    }\n    return null; // 작성자가 아니면 수정/삭제 버튼을 숨김\n  };\n\n  // 파일 - 썸네일\n  const handleThumbnailClick = thumbnailURL => {\n    setModalIsOpen(true);\n    setSelectedImage(thumbnailURL);\n  };\n\n  // 파일 \n  const closeImageModal = () => {\n    setModalIsOpen(false);\n    setSelectedImage('');\n  };\n\n  // 파일 - 이미지 로딩\n  const renderImages = () => {\n    const imageList = imageDTOList;\n    return imageList.map((images, index) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"hidden_type\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, images.imgType == 'A' ? /*#__PURE__*/React.createElement(\"img\", {\n      src: `/api/supload/display?fileName=${images.imgName}`,\n      alt: `썸네일 ${index}`,\n      onClick: () => handleThumbnailClick(images.imageURL),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }) : ''));\n  };\n\n  // 파일 - 메인 이미지 로딩\n  // imgtype = M (메인이미지)\n  const renderMainImages = () => {\n    const mainImgList = mainImage;\n    return mainImgList.map((image, index) => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"hidden_type1\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, image.imgType == 'M' ? /*#__PURE__*/React.createElement(\"img\", {\n      src: `/api/supload/display?fileName=${image.imgName}`,\n      alt: `썸네일 ${index}`,\n      onClick: () => handleThumbnailClick(image.imageURL),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }) : ''));\n  };\n  const deleteArticle = e => {\n    sweetalertDelete1('삭제하시겠습니까?', () => {\n      axios.delete(`/api/subscribe/subscribeLessionDelete/${sno}`, {\n        // sno: sno\n      }).then(response => {}).catch(error => {\n        alert('작업중 오류가 발생하였습니다.');\n        return false;\n      });\n    });\n  };\n  const sweetalertDelete1 = (title, callbackFunc) => {\n    Swal.fire({\n      title: title,\n      text: \"\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes'\n    }).then(result => {\n      if (result.value) {\n        Swal.fire('삭제되었습니다.', '', 'success').then(() => {\n          window.location.href = '/SubscribeLList';\n        });\n      } else {\n        return false;\n      }\n      callbackFunc();\n    });\n  };\n\n  // 댓글\n  const submitClick = e => {\n    console.log(\"현재 uuid:\", uuid);\n    console.log(\"현재 mno:\", mno);\n    const reply_checker = $('#replyTextVal').val();\n    const fnValidate = e => {\n      if (reply_checker === '') {\n        $('#replyTextVal').addClass('border_validate_err');\n        sweetalert('댓글내용을 입력해주세요.', '', 'error', '닫기');\n        return false;\n      }\n      $('#replyTextVal').removeClass('border_validate_err');\n      return true;\n    };\n    if (fnValidate()) {\n      // 폼 데이터를 객체로 수집\n      const Json_data = {\n        sno: $('#snoVal').val(),\n        replyer: $('#replyerVal').val(),\n        Rmno: rmno,\n        // mno 값을 별도로 수집한 경우\n        rcomment: $('#replyTextVal').val()\n      };\n      axios.post('/api/sreplies/add', Json_data).then(response => {\n        try {\n          if (response.data == \"SUCCESS\") {\n            callReplyListApi(sno);\n            $('#replyTextVal').val('');\n          }\n        } catch (error) {\n          alert('1. 작업중 오류가 발생하였습니다.');\n        }\n      }).catch(error => {\n        alert('2. 작업중 오류가 발생하였습니다.');\n        return false;\n      });\n    }\n  };\n  const sweetalert = (title, contents, icon, confirmButtonText) => {\n    Swal.fire({\n      title: title,\n      text: contents,\n      icon: icon,\n      confirmButtonText: confirmButtonText\n    });\n  };\n  const callReplyListApi = sno => {\n    axios.get(`/api/sreplies/list/${sno}`) // 게시글 번호에서 댓글 달꺼니까!\n    .then(response => {\n      console.log(\"댓글 데이터 수신:\", response.data); // 서버로부터 받은 데이터를 확인\n      // console.log(response.data);\n      try {\n        setResponseReplyList(response.data);\n        setAppend_ReplyList(ReplyListAppend(response.data));\n      } catch (error) {\n        alert('작업중 오류가 발생하였습니다1.');\n      }\n    }).catch(error => {\n      alert('작업중 오류가 발생하였습니다2 (댓글).');\n      return false;\n    });\n  };\n  const ReplyListAppend = replyList => {\n    if (!replyList || replyList.length === 0) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 20\n        }\n      }, \"\\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\");\n    }\n    let result = [];\n    for (let i = 0; i < replyList.length; i++) {\n      let data = replyList[i];\n      const isCurrentUserCommentOwner = true; // 작성자 여부 판단\n      console.log(\"댓글에서 보여줄 내용:\", data); // 댓글 목록 확인\n\n      console.log(\"uuidMap 확인:\", uuidMap);\n      console.log(\"현재 mno 확인:\", data.mno);\n      result.push(/*#__PURE__*/React.createElement(\"li\", {\n        key: data.rno,\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          fontSize: '19px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '80px',\n          height: '80px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: require(`../../img/댓글2.gif`),\n        alt: \"\\uB313\\uAE00 \\uC774\\uBBF8\\uC9C0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: '19px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 29\n        }\n      }, data.mno, \"  |  \", uuidMap[data.mno] ? uuidMap[data.mno] : '아이디 누락', \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: '12px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginLeft: '5px',\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: '10px',\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: '#525252'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 29\n        }\n      }, data.rcomment))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }\n      }, renderReplyModifyDeleteButtons(data))));\n    }\n    return result;\n  };\n  const deleteComment = rno => {\n    sweetalertDelete2('삭제하시겠습니까?', () => {\n      axios.delete(`/api/sreplies/delete/${rno}`, {\n        /*  rNo: responseReplyList.data[index].rno,\n         sno: sno */\n      }).then(response => {\n        if (response.data == \"SUCCESS\") {\n          callReplyListApi(sno);\n        }\n      }).catch(error => {\n        alert('작업중 오류가 발생하였습니다.');\n        return false;\n      });\n    });\n  };\n  const sweetalertDelete2 = (title, callbackFunc) => {\n    Swal.fire({\n      title: title,\n      text: \"\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes'\n    }).then(result => {\n      if (result.value) {\n        callbackFunc();\n        //callReplyListApi(sno);\n      } else {\n        return false;\n      }\n    });\n  };\n  const modifyComment = (rno, rco) => {\n    console.log(\"=====================> \" + rno);\n    setIsEditModalOpen(true);\n    setSelectRno(rno);\n    setEditedContent(rco);\n  };\n  const openEditModal = rno => {\n    setSelectRno(rno); // 선택한 댓글 번호 설정\n    setIsEditModalOpen(true); // 모달 열기\n    setEditedContent(rno); // 수정할 댓글 내용 설정 (현재는 rno를 넣고 있는데, 이 부분에 실제 수정할 댓글 내용을 넣어야 할 수도 있습니다)\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n    setEditedContent('');\n  };\n  const handleEditSubmit = () => {\n    axios.put(`/api/sreplies/update/${selectRno}`, {\n      rno: selectRno,\n      rcomment: editedContent\n    }).then(response => {\n      if (response.data == \"SUCCESS\") {\n        setIsEditModalOpen(false);\n        callReplyListApi(sno);\n        sweetalert('댓글 수정이 완료되었습니다', '', 'success', '닫기');\n      }\n    }).catch(error => {\n      sweetalert('수정할 내용을 입력해 주세요.', '', 'error', '닫기');\n    });\n  };\n  const formattedRegidate = new Date(regidate).toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  }).split('.').join('/').replace(/\\s/g, '');\n  const trimmedRegidate = formattedRegidate.slice(0, -1);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    class: \"sub_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    class: \"s_cnt mp_pro_li ct1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"li_top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    class: \"s_tit1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 21\n    }\n  }, \"\\uAC15\\uC758\\uC218\\uAC15\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"bo_w re1_wrap re1_wrap_writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"frm\",\n    id: \"frm\",\n    action: \"\",\n    onsubmit: \"\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    class: \"res_w\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tb_outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"Right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/SubscribeLList`,\n    className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 37\n    }\n  }, \"\\uBAA9\\uB85D\")), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table_ty1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 45\n    }\n  }, \"\\uAC15\\uC758\\uC81C\\uBAA9\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    id: \"titleVal\",\n    readOnly: \"readonly\",\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"spoint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 45\n    }\n  }, \"\\uC218\\uAC15\\uB8CC\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"spoint\",\n    id: \"spointVal\",\n    readOnly: \"readonly\",\n    value: spoint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table_ty1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 45\n    }\n  }, \"\\uAC15\\uC758\\uB4F1\\uB85D\\uC790\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"writer\",\n    id: \"writerVal\",\n    readOnly: \"readonly\",\n    value: writer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"regDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 45\n    }\n  }, \"\\uC791\\uC131\\uC77C\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"regiDate\",\n    id: \"regiDateVal\",\n    readOnly: \"readonly\",\n    value: trimmedRegidate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 45\n    }\n  }, \"\\uC870\\uD68C\\uC218\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"viewCnt\",\n    id: \"viewCntVal\",\n    readOnly: \"readonly\",\n    value: viewCnt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table_ty1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 45\n    }\n  }, \"\\uAC15\\uC758\\uB0B4\\uC6A9\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    style: {\n      padding: '15px'\n    },\n    name: \"content\",\n    id: \"contentVal\",\n    rows: \"\",\n    cols: \"\",\n    readOnly: \"readonly\",\n    value: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 41\n    }\n  }, \"\\uD30C\\uC77C\\uBAA9\\uB85D\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fileBox fileBox1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"upload_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 45\n    }\n  }, renderImages()))), /*#__PURE__*/React.createElement(Modal, {\n    ariaHideApp: false,\n    isOpen: modalIsOpen,\n    onRequestClose: closeImageModal,\n    contentLabel: \"\\uC378\\uB124\\uC77C \\uC774\\uBBF8\\uC9C0\",\n    style: {\n      overlay: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n      },\n      content: {\n        width: '75%',\n        height: '75%',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        overflow: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 37\n    }\n  }, selectedImage && /*#__PURE__*/React.createElement(\"img\", {\n    src: `/api/supload/display?fileName=${selectedImage}`,\n    alt: \"\\uC120\\uD0DD\\uD55C \\uC378\\uB124\\uC77C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 45\n    }\n  }))), renderModifyDeleteButtons()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table_ty99\",\n    style: {\n      marginTop: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 21\n    }\n  }, \"\\uB313\\uAE00\"), /*#__PURE__*/React.createElement(\"form\", {\n    name: \"frm2\",\n    id: \"frm2\",\n    action: \"\",\n    onsubmit: \"\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table_ty1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    id: \"snoDiv\",\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"sno\",\n    id: \"snoVal\",\n    value: sno,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table_ty1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"mno\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uBC88\\uD638\")), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      flex: '1',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"mno\",\n    id: \"rmno\",\n    readOnly: \"readonly\",\n    value: rmno,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"replyer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 41\n    }\n  }, \"\\uC791\\uC131\\uC790\")), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      flex: '1',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"replyer\",\n    id: \"replyerVal\",\n    readOnly: \"readonly\",\n    value: uuid,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"rcomment\",\n    style: {\n      marginRight: '135px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 37\n    }\n  }, \"\\uB313\\uAE00\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \" rcomment\",\n    id: \"replyTextVal\",\n    placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    style: {\n      flex: '1',\n      marginRight: '8px',\n      height: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"javascript:\",\n    className: \"bt_ty1 bt_ty3 submit_ty1 saveclass\",\n    onClick: e => submitClick(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 37\n    }\n  }, \"\\uB4F1\\uB85D\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"replyarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 25\n    }\n  }, append_ReplyList))), /*#__PURE__*/React.createElement(Modal, {\n    ariaHideApp: false,\n    isOpen: isEditModalOpen,\n    onRequestClose: closeEditModal,\n    style: {\n      overlay: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)'\n      },\n      content: {\n        width: '30%',\n        height: '30%',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        overflow: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"replyDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 25\n    }\n  }, \"\\uB313\\uAE00 \\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input_2\",\n    style: {\n      height: '30%',\n      width: '80%',\n      padding: '15px',\n      marginBottom: '20px'\n    },\n    value: editedContent,\n    onChange: e => setEditedContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n    onClick: handleEditSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 29\n    }\n  }, \"\\uC800\\uC7A5\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bt_ty bt_ty2 submit_ty1 saveclass\",\n    onClick: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 29\n    }\n  }, \"\\uCDE8\\uC18C\"))))));\n};\nexport default SubscribeLRead;","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","axios","$","Swal","cookie","Modal","SubscribeLRead","props","sno","title","setTitle","spoint","setSpoint","content","setContent","writer","setWriter","mno","setMno","rmno","setRmno","uuid","setUuid","load","viewCnt","setViewCnt","regidate","setRegidate","imageDTOList","setImageDTOList","mainImage","setMainImageList","modalIsOpen","setModalIsOpen","selectedImage","setSelectedImage","append_ReplyList","setAppend_ReplyList","responseReplyList","setResponseReplyList","isEditModalOpen","setIsEditModalOpen","editedContent","setEditedContent","selectRno","setSelectRno","uuidMap","setUuidMap","token","callReplyListApi","post","then","response","userUuid","data","callNboardInfoApi","catch","error","console","log","ReplyListAppend","length","fetchUuids","requests","map","responses","Promise","all","uuidMapping","reduce","acc","index","get","contents","counts","wdate","alert","renderModifyDeleteButtons","createElement","id","className","style","marginBottom","textAlign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","href","onClick","deleteArticle","renderReplyModifyDeleteButtons","modifyComment","rno","deleteComment","handleThumbnailClick","thumbnailURL","closeImageModal","renderImages","imageList","images","key","imgType","src","imgName","alt","imageURL","renderMainImages","mainImgList","image","e","sweetalertDelete1","delete","callbackFunc","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","value","window","location","submitClick","reply_checker","val","fnValidate","addClass","sweetalert","removeClass","Json_data","replyer","Rmno","rcomment","replyList","i","isCurrentUserCommentOwner","push","display","justifyContent","alignItems","fontSize","width","height","require","marginLeft","color","sweetalertDelete2","rco","openEditModal","closeEditModal","handleEditSubmit","put","formattedRegidate","Date","toLocaleDateString","year","month","day","split","join","replace","trimmedRegidate","slice","class","name","action","onsubmit","method","for","type","readOnly","padding","rows","cols","ariaHideApp","isOpen","onRequestClose","contentLabel","overlay","backgroundColor","top","left","transform","border","borderRadius","overflow","flexDirection","marginTop","marginRight","flex","placeholder","onChange","target"],"sources":["/home/user1/workspace/HealthPlan_All/HealthPlan_front/client/src/components/subscribe/SubscribeLRead.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport $ from 'jquery';\nimport Swal from 'sweetalert2'\nimport cookie from 'react-cookies';\nimport Modal from 'react-modal';\n\n\nconst SubscribeLRead = (props) => {\n    const { sno } = useParams();\n\n    const [title, setTitle] = useState('');\n    const [spoint, setSpoint] = useState('');\n    const [content, setContent] = useState('');\n    const [writer, setWriter] = useState('');\n    const [mno, setMno] = useState(''); // 글 작성자 회원번호\n    const [rmno, setRmno] = useState(''); // 로그인한 사용자의 회원번호\n    const [uuid, setUuid] = useState(cookie.load('uuid'));\n    const [viewCnt, setViewCnt] = useState('');\n    const [regidate, setRegidate] = useState('');\n    const [imageDTOList, setImageDTOList] = useState([]);\n    const [mainImage, setMainImageList] = useState([]);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [selectedImage, setSelectedImage] = useState('');\n    const [append_ReplyList, setAppend_ReplyList] = useState([]);\n    const [responseReplyList, setResponseReplyList] = useState([]);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [editedContent, setEditedContent] = useState('');\n    const [selectRno, setSelectRno] = useState('');\n\n\n    const [uuidMap, setUuidMap] = useState({}); // mno와 uuid 매핑을 저장\n\n    // 1. token에서 로그인한 사용자의 id 읽어오기\n    useEffect(() => {\n        const token = cookie.load('token'); // 쿠키에서 토큰 가져오기\n        callReplyListApi(sno);\n\n        if (token) {\n            // 토큰을 서버에 보내서 로그인한 사용자의 uuid를 받아옴\n            axios.post('/api/member/loginCookie', { token })\n                .then(response => {\n                    const userUuid = response.data.uuid; // 서버로부터 받아온 로그인한 사용자의 uuid\n                    setUuid(userUuid);\n                    // 회원 번호(mno)를 가져오기 위해 추가 요청\n                    axios.post('/api/member/readMno', { uuid: userUuid })\n                        .then(response => {\n                            setRmno(response.data.mno); // 회원 번호 상태 업데이트\n                            callNboardInfoApi(userUuid); // 받아온 UUID를 기반으로 게시글 정보 요청\n                            callReplyListApi(sno); // 11.06 추가 댓글 요청\n                        })\n                        .catch(error => {\n                            console.error('회원 번호를 가져오는 중 오류 발생:', error);\n                        });\n                })\n                .catch(error => {\n                    console.error('토큰에서 아이디를 읽어올 수 없습니다:', error);\n                });\n        }\n    }, [sno]);\n\n    useEffect(() => {\n        console.log(\"uuidMap이 업데이트되었습니다:\", uuidMap);\n        setAppend_ReplyList(ReplyListAppend(responseReplyList));\n    }, [uuidMap, responseReplyList]);  // uuidMap이 변경될 때마다 댓글 목록을 다시 렌더링\n\n\n    // 2. 댓글 목록에서 mno로 uuid 가져오기\n    useEffect(() => {\n\n        if (!responseReplyList || responseReplyList.length === 0) {\n            console.log('댓글 데이터가 없습니다.');\n            return;\n        }\n\n\n        console.log(\"responseReplyList 변경됨!!!! 2:\", responseReplyList);\n\n\n        const fetchUuids = async () => {\n            if (responseReplyList && responseReplyList.length > 0) {\n                console.log(\"fetchUuids 호출됨, responseReplyList:\", responseReplyList);\n\n                const requests = responseReplyList.map((data) =>\n                    axios.post('/api/member/getUuidByMno', { mno: data.mno })\n                );\n\n                try {\n                    const responses = await Promise.all(requests);\n                    console.log(\"응답 확인\", responses); // 응답 확인용 콘솔 로그\n\n                    const uuidMapping = responseReplyList.reduce((acc, data, index) => {\n                        console.log(\"응답에서 받은 uuid:\", responses[index].data.uuid);\n                        acc[data.mno] = responses[index].data.uuid; // mno에 해당하는 uuid 매핑\n                        return acc;\n                    }, {});\n\n                    console.log(\"매핑된 uuidMap: \", uuidMapping); // uuidMap 확인\n                    setUuidMap(uuidMapping); // 상태 업데이트\n\n                } catch (error) {\n                    console.error('UUID 조회 중 오류 발생:', error);\n                }\n            }\n        };\n\n\n        fetchUuids(); // 비동기 작업 호출\n    }, [responseReplyList]); // responseReplyList가 변경될 때마다 실행\n\n\n\n    // 2. 게시글 정보 API 호출, 게시글 작성자 UUID와 로그인한 사용자의 UUID를 비교\n    const callNboardInfoApi = async () => {\n        axios.get(`/api/subscribe/subscribeLessionRead/${sno}`, {\n            //sno: sno,\n        }).then(response => {\n            try {\n                setTitle(response.data.title);\n                setSpoint(response.data.spoint);\n                setContent(response.data.contents);\n                setWriter(response.data.uuid);\n                setMno(response.data.mno);\n                setViewCnt(response.data.counts);\n                setRegidate(response.data.wdate);\n                setImageDTOList(response.data.imageDTOList);\n                setMainImageList(response.data.mainImage);\n            }\n            catch (error) {\n                alert('게시글 데이터 받기 오류')\n            }\n\n        }).catch(error => { alert('게시글 데이터 받기 오류2'); return false; });\n    }\n\n\n\n    // 3. 게시글 작성자와 로그인한 사용자의 UUID가 일치하면 수정/삭제 버튼을 보여줌\n    const renderModifyDeleteButtons = () => {\n        if (uuid === writer || uuid === 'admin') {\n            return (\n                <div id=\"modifyButton\" className=\"btn_confirm mt20\" style={{ marginBottom: '44px', textAlign: 'center' }}>\n                    <Link to={`/SubscribeLUpdate/${sno}`} className=\"bt_ty bt_ty2 submit_ty1 saveclass\">수정</Link>\n                    <a href=\"javascript:\" className=\"bt_ty bt_ty2 submit_ty1 saveclass\" onClick={deleteArticle}>삭제</a>\n                </div>\n            );\n        }\n        return null; // 작성자가 아니면 수정/삭제 버튼을 숨김\n    };\n\n\n    // 4. 댓글 작성자와 로그인한 사용자의 UUID가 일치하면 수정/삭제 버튼을 보여줌\n    const renderReplyModifyDeleteButtons = (data) => {\n        // data.replyer를 uuidMap에서 찾아서 현재 로그인한 uuid와 비교\n        if (uuidMap[data.mno] && uuidMap[data.mno] === uuid) {\n            return (\n                <div>\n                    <button className=\"catbtn bt_ty2 submit_ty1 saveclass\" onClick={() => modifyComment(`${data.rno}`)}>수정</button>\n                    {/*  <button className=\"catbtn bt_ty2 submit_ty1 saveclass\" onClick={() => openEditModal(`${data.rno}`)}>모달</button> */}\n                    <button className=\"catbtn bt_ty2 submit_ty1 saveclass\" onClick={() => deleteComment(`${data.rno}`)}>삭제</button>\n                </div>\n            );\n        }\n        return null; // 작성자가 아니면 수정/삭제 버튼을 숨김\n    };\n\n\n    // 파일 - 썸네일\n    const handleThumbnailClick = (thumbnailURL) => {\n        setModalIsOpen(true);\n        setSelectedImage(thumbnailURL);\n    };\n\n    // 파일 \n    const closeImageModal = () => {\n        setModalIsOpen(false);\n        setSelectedImage('');\n    };\n\n    // 파일 - 이미지 로딩\n    const renderImages = () => {\n        const imageList = imageDTOList;\n\n        return imageList.map((images, index) => (\n            <li className=\"hidden_type\" key={index}>\n                {images.imgType == 'A' ?\n                    <img src={`/api/supload/display?fileName=${images.imgName}`}\n                        alt={`썸네일 ${index}`}\n                        onClick={() => handleThumbnailClick(images.imageURL)} />\n                    : ''\n                }\n            </li>\n        ));\n    };\n\n    // 파일 - 메인 이미지 로딩\n    // imgtype = M (메인이미지)\n    const renderMainImages = () => {\n        const mainImgList = mainImage;\n\n        return mainImgList.map((image, index) => (\n            <li className=\"hidden_type1\" key={index}>\n                {image.imgType == 'M' ?\n                    <img src={`/api/supload/display?fileName=${image.imgName}`}\n                        alt={`썸네일 ${index}`}\n                        onClick={() => handleThumbnailClick(image.imageURL)} />\n                    : ''\n                }\n            </li>\n        ));\n    };\n\n    const deleteArticle = (e) => {\n        sweetalertDelete1('삭제하시겠습니까?', () => {\n            axios.delete(`/api/subscribe/subscribeLessionDelete/${sno}`, {\n                // sno: sno\n            }).then(response => {\n\n            }).catch(error => {\n                alert('작업중 오류가 발생하였습니다.'); return false;\n            });\n        })\n    };\n\n    const sweetalertDelete1 = (title, callbackFunc) => {\n        Swal.fire({\n            title: title,\n            text: \"\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes'\n        }).then((result) => {\n            if (result.value) {\n                Swal.fire(\n                    '삭제되었습니다.',\n                    '',\n                    'success'\n                ).then(() => {\n                    window.location.href = '/SubscribeLList';\n                });\n            } else {\n                return false;\n            }\n            callbackFunc();\n        })\n    }\n\n    // 댓글\n    const submitClick = (e) => {\n\n        console.log(\"현재 uuid:\", uuid);\n        console.log(\"현재 mno:\", mno);\n\n        \n        const reply_checker = $('#replyTextVal').val();\n\n        const fnValidate = (e) => {\n            if (reply_checker === '') {\n                $('#replyTextVal').addClass('border_validate_err');\n                sweetalert('댓글내용을 입력해주세요.', '', 'error', '닫기')\n                return false;\n            }\n            $('#replyTextVal').removeClass('border_validate_err');\n            return true;\n        }\n\n        if (fnValidate()) {\n\n\n            // 폼 데이터를 객체로 수집\n            const Json_data = {\n                sno: $('#snoVal').val(),\n                replyer: $('#replyerVal').val(),\n                Rmno: rmno,  // mno 값을 별도로 수집한 경우\n                rcomment: $('#replyTextVal').val()\n            };\n\n            axios.post('/api/sreplies/add', Json_data)\n                .then(response => {\n                    try {\n                        if (response.data == \"SUCCESS\") {\n                            callReplyListApi(sno);\n                            $('#replyTextVal').val('')\n                        }\n                    }\n                    catch (error) {\n                        alert('1. 작업중 오류가 발생하였습니다.')\n                    }\n                })\n                .catch(error => { alert('2. 작업중 오류가 발생하였습니다.'); return false; });\n        }\n    };\n\n    const sweetalert = (title, contents, icon, confirmButtonText) => {\n        Swal.fire({\n            title: title,\n            text: contents,\n            icon: icon,\n            confirmButtonText: confirmButtonText\n        })\n    }\n\n    const callReplyListApi = (sno) => {\n        axios.get(`/api/sreplies/list/${sno}`) // 게시글 번호에서 댓글 달꺼니까!\n\n            .then(response => {\n                console.log(\"댓글 데이터 수신:\", response.data); // 서버로부터 받은 데이터를 확인\n                // console.log(response.data);\n                try {\n                    setResponseReplyList(response.data);\n                    setAppend_ReplyList(ReplyListAppend(response.data));\n                } catch (error) {\n                    alert('작업중 오류가 발생하였습니다1.');\n                }\n            })\n            .catch(error => { alert('작업중 오류가 발생하였습니다2 (댓글).'); return false; });\n    }\n\n\n    const ReplyListAppend = (replyList) => {\n\n        if (!replyList || replyList.length === 0) {\n            return <li>댓글이 없습니다.</li>;\n        }\n        let result = []\n\n        for (let i = 0; i < replyList.length; i++) {\n            let data = replyList[i]\n            const isCurrentUserCommentOwner = true; // 작성자 여부 판단\n            console.log(\"댓글에서 보여줄 내용:\", data); // 댓글 목록 확인\n\n            console.log(\"uuidMap 확인:\", uuidMap);\n            console.log(\"현재 mno 확인:\", data.mno);\n            result.push(\n                <li key={data.rno} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', fontSize: '19px' }}>\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <div style={{ width: '80px', height: '80px' }}>\n                            <img src={require(`../../img/댓글2.gif`)} alt=\"댓글 이미지\" />\n                        </div>\n                        <div className=\"cat\">\n                            <p style={{ fontSize: '19px' }}>\n                                {/*  {data.userUuid} */}{/* {' '} */}\n                                {data.mno}  |  {uuidMap[data.mno] ? uuidMap[data.mno] : '아이디 누락'} {/* uuid 표시 */}\n                               \n                                <span style={{ fontSize: '12px' }}>\n                                    {/* {formattedDate} */}\n                                    {/*  {data.modidate && ( */}\n                                    {/* <> */}\n                                    <span style={{ marginLeft: '5px', color: 'grey' }}>{/* (수정됨) */}</span>\n                                    <span style={{ fontSize: '10px', color: 'grey' }}>\n                                        {/* {moment(data.modidate).fromNow()} */}\n                                    </span>\n                                    {/*  </> */}\n                                    {/* )} */}\n                                </span>\n                            </p>\n                            <p style={{ color: '#525252' }}>{data.rcomment}</p>\n                        </div>\n                    </div>\n                    <div>\n                        {renderReplyModifyDeleteButtons(data)}\n                    </div>\n                </li>\n            );\n        }\n        return result\n    }\n\n    const deleteComment = (rno) => {\n        sweetalertDelete2('삭제하시겠습니까?', () => {\n            axios.delete(`/api/sreplies/delete/${rno}`, {\n                /*  rNo: responseReplyList.data[index].rno,\n                 sno: sno */\n            })\n                .then(response => {\n                    if (response.data == \"SUCCESS\") {\n                        callReplyListApi(sno);\n                    }\n                }).catch(error => { alert('작업중 오류가 발생하였습니다.'); return false; });\n        })\n    };\n\n    const sweetalertDelete2 = (title, callbackFunc) => {\n        Swal.fire({\n            title: title,\n            text: \"\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes'\n        }).then((result) => {\n            if (result.value) {\n                callbackFunc();\n                //callReplyListApi(sno);\n            } else {\n                return false;\n            }\n        })\n    }\n\n    const modifyComment = (rno, rco) => {\n        console.log(\"=====================> \" + rno);\n        setIsEditModalOpen(true);\n        setSelectRno(rno);\n        setEditedContent(rco);\n    };\n\n\n    const openEditModal = (rno) => {\n        setSelectRno(rno);  // 선택한 댓글 번호 설정\n        setIsEditModalOpen(true);  // 모달 열기\n        setEditedContent(rno);  // 수정할 댓글 내용 설정 (현재는 rno를 넣고 있는데, 이 부분에 실제 수정할 댓글 내용을 넣어야 할 수도 있습니다)\n    };\n\n    const closeEditModal = () => {\n        setIsEditModalOpen(false);\n        setEditedContent('');\n    };\n\n    const handleEditSubmit = () => {\n        axios.put(`/api/sreplies/update/${selectRno}`, {\n            rno: selectRno,\n            rcomment: editedContent,\n        })\n            .then(response => {\n                if (response.data == \"SUCCESS\") {\n                    setIsEditModalOpen(false);\n                    callReplyListApi(sno);\n                    sweetalert('댓글 수정이 완료되었습니다', '', 'success', '닫기');\n                }\n            })\n            .catch(error => { sweetalert('수정할 내용을 입력해 주세요.', '', 'error', '닫기'); });\n    };\n\n    const formattedRegidate = new Date(regidate).toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n    }).split('.').join('/').replace(/\\s/g, '');\n\n    const trimmedRegidate = formattedRegidate.slice(0, -1);\n\n    return (\n        <section class=\"sub_wrap\">\n            <article class=\"s_cnt mp_pro_li ct1\">\n                <div class=\"li_top\">\n                    <h2 class=\"s_tit1\">강의수강</h2>\n                </div>\n                <div class=\"bo_w re1_wrap re1_wrap_writer\">\n                    <form name=\"frm\" id=\"frm\" action=\"\" onsubmit=\"\" method=\"post\" >\n                        <article class=\"res_w\">\n                            <div class=\"tb_outline\">\n                                <div style={{ textAlign: \"Right\" }}>\n                                    <Link to={`/SubscribeLList`} className=\"bt_ty bt_ty2 submit_ty1 saveclass\">목록</Link>\n                                </div>\n                                <table class=\"table_ty1\">\n                                    {/* <tr>\n                                        <th>\n                                            대표이미지\n                                        </th>\n                                        <td className=\"fileBox fileBox1\">\n                                            <ul id=\"upload_mainimg\">\n                                                {renderMainImages()}\n                                            </ul>\n                                        </td>\n                                    </tr>*/}\n                                    <tr> \n                                        <th>\n                                            <label for=\"title\">강의제목</label>\n                                        </th>\n                                        <td>\n                                            <input type=\"text\" name=\"title\" id=\"titleVal\" readOnly=\"readonly\" value={title} />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th>\n                                            <label for=\"spoint\">수강료</label>\n                                        </th>\n                                        <td>\n                                            <input type=\"text\" name=\"spoint\" id=\"spointVal\" readOnly=\"readonly\" value={spoint} />\n                                        </td>\n                                    </tr>\n                                </table>\n                                <table class=\"table_ty1\">\n                                    <tr>\n                                        <th>\n                                            <label for=\"writer\">강의등록자</label>\n                                        </th>\n                                        <td>\n                                            <input type=\"text\" name=\"writer\" id=\"writerVal\" readOnly=\"readonly\" value={writer} />\n                                        </td>\n\n                                        <th style={{ textAlign: \"center\" }}>\n                                            <label for=\"regDate\">작성일</label>\n                                        </th>\n                                        <td>\n                                            <input type=\"text\" name=\"regiDate\" id=\"regiDateVal\" readOnly=\"readonly\" value={trimmedRegidate} />\n                                        </td>\n\n                                        <th style={{ textAlign: \"center\" }}>\n                                            <label for=\"writer\">조회수</label>\n                                        </th>\n                                        <td>\n                                            <input type=\"text\" name=\"viewCnt\" id=\"viewCntVal\" readOnly=\"readonly\" value={viewCnt} />\n                                        </td>\n                                    </tr>\n                                </table>\n                                <table class=\"table_ty1\">\n\n                                    <tr>\n                                        <th>\n                                            <label for=\"Content\">강의내용</label>\n                                        </th>\n                                        <td>\n                                            <textarea style={{ padding: '15px' }} name=\"content\" id=\"contentVal\" rows=\"\" cols=\"\" readOnly=\"readonly\" value={content}></textarea>\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <th>\n                                            파일목록\n                                        </th>\n                                        <td className=\"fileBox fileBox1\">\n                                            <ul id=\"upload_img\">\n                                                {renderImages()}\n                                            </ul>\n                                        </td>\n                                    </tr>\n\n                                    <Modal\n                                        ariaHideApp={false}\n                                        isOpen={modalIsOpen}\n                                        onRequestClose={closeImageModal}\n                                        contentLabel=\"썸네일 이미지\"\n                                        style={{\n                                            overlay: {\n                                                backgroundColor: 'rgba(0, 0, 0, 0.5)'\n                                            },\n                                            content: {\n                                                width: '75%',\n                                                height: '75%',\n                                                top: '50%',\n                                                left: '50%',\n                                                transform: 'translate(-50%, -50%)',\n                                                border: '1px solid #ccc',\n                                                borderRadius: '4px',\n                                                overflow: 'auto',\n                                                display: 'flex',\n                                                flexDirection: 'column',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                backgroundColor: 'rgba(0, 0, 0, 0.5)'\n                                            }\n                                        }}>\n                                        {selectedImage && (\n                                            <img src={`/api/supload/display?fileName=${selectedImage}`} alt=\"선택한 썸네일\" />\n                                        )}\n                                    </Modal>\n\n                                </table>\n                                {/* 조건에 맞으면 수정/삭제 버튼 표시 */}\n                                {renderModifyDeleteButtons()}\n                            </div>\n                        </article>\n                    </form>\n\n                    <div className='table_ty99' style={{ marginTop: '50px' }}>댓글</div>\n                    <form name=\"frm2\" id=\"frm2\" action=\"\" onsubmit=\"\" method=\"post\">\n                        <div className='line'></div>\n                        <table class=\"table_ty1\">\n                            <tr id='snoDiv' style={{ display: 'none' }}>\n                                <td>\n                                    <input type=\"hidden\" name=\"sno\" id=\"snoVal\" value={sno} />\n                                </td>\n                            </tr>\n\n                            <table class=\"table_ty1\">\n                                <tr style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n                                    <th style={{ marginRight: '10px' }}>\n                                        <label for=\"mno\">회원번호</label>\n                                    </th>\n                                    <td style={{ flex: '1', marginRight: '10px' }}>\n                                        <input type=\"text\" name=\"mno\" id=\"rmno\" readOnly=\"readonly\" value={rmno} style={{ width: '100%' }} />\n                                    </td>\n\n                                    <th style={{ marginLeft: '20px' }}>\n                                        <label for=\"replyer\">작성자</label>\n                                    </th>\n                                    <td style={{ flex: '1', marginRight: '10px' }}>\n                                        <input type=\"text\" name=\"replyer\" id=\"replyerVal\" readOnly=\"readonly\" value={uuid} style={{ width: '100%' }} />\n                                    </td>\n                                </tr>\n                            </table>\n                            <tr>\n                                <td style={{ display: 'flex', alignItems: 'center' }}>\n                                    <label for=\"rcomment\" style={{ marginRight: '135px' }}>댓글</label>\n                                    <input type=\"text\" name=\" rcomment\" id=\"replyTextVal\" placeholder='내용을 입력해주세요.' style={{ flex: '1', marginRight: '8px', height: '50px' }} />\n                                    <a href=\"javascript:\" className=\"bt_ty1 bt_ty3 submit_ty1 saveclass\" onClick={(e) => submitClick(e)}>등록</a>\n                                </td>\n                            </tr>\n                        </table>\n                    </form>\n                    <div id='replyarea'>\n                        <ul>\n                            {append_ReplyList}\n                        </ul>\n                    </div>\n                </div>\n\n                <Modal\n                    ariaHideApp={false}\n                    isOpen={isEditModalOpen}\n                    onRequestClose={closeEditModal}\n                    style={{\n                        overlay: {\n                            backgroundColor: 'rgba(0, 0, 0, 0.5)'\n                        },\n                        content: {\n                            width: '30%',\n                            height: '30%',\n                            top: '50%',\n                            left: '50%',\n                            transform: 'translate(-50%, -50%)',\n                            border: '1px solid #ccc',\n                            borderRadius: '4px',\n                            overflow: 'auto',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: 'white'\n                        }\n                    }}>\n                    <div id=\"replyDiv\">\n                        <h2>댓글 수정</h2>\n                        <br></br>\n                        <input className=\"input_2\" style={{ height: '30%', width: '80%', padding: '15px', marginBottom: '20px' }}\n                            value={editedContent}\n                            onChange={(e) => setEditedContent(e.target.value)} ></input>\n                        <br></br>\n                        <div style={{ display: 'flex' }}>\n                            <button className=\"bt_ty bt_ty2 submit_ty1 saveclass\" onClick={handleEditSubmit}>저장</button>\n                            <button className=\"bt_ty bt_ty2 submit_ty1 saveclass\" onClick={closeEditModal}>취소</button>\n                        </div>\n                    </div>\n                </Modal>\n            </article>\n        </section>\n    );\n}\n\nexport default SubscribeLRead;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}